-Current
  -Right now
    The login screen is not saying "hey login failed" when it fails
    The session.exec thing is returning an int. It doesn't account for the fact that we might have refused to login or whatever or our password didn't work. When our password doesn't work, we should retry. We shouldn't just splat.

  -Put a lazy-load wrapper around the file system view so we can DI it.

  -Why don't the windows close when you click the close button? What? 
  
  -Tabs & Indents allows invalid input - letters instead of numbers
  
  -SSH Login needs a list of open connections to select for closing.

  -SSH Todo:
    We need a last user saved to persist so we can hotrod logins.
    SSHFileSystemView.createFileObject needs to be able to go to the cache.
    Save as
    File open 
    Reconnect after lost connection
    Dialog for entering SSH info:
      host
      user
      pass/keyfile
        -keyfile defaults to pass

  -It honestly would be handy to turn multiline off in find/repl. Just because ^.*?$ can cross multiple lines

  -File open ought to start off the session with the last directory opened. 
   It's annoying when it defaults to my stupid home directory. Well ...ssh. Ugh.
      
  -New Klonk Bug
  Also consider the idea offered at bottom of this page:
  http://stackoverflow.com/questions/6436944/java-illegalstateexception-buffers-have-not-been-created
  java.lang.IllegalStateException: Buffers have not been created
          at sun.awt.windows.WComponentPeer.getBackBuffer(Unknown Source)
          at java.awt.Component$FlipBufferStrategy.getBackBuffer(Unknown Source)
          at java.awt.Component$FlipBufferStrategy.updateInternalBuffers(Unknown Source)
          at java.awt.Component$FlipBufferStrategy.revalidate(Unknown Source)
          at java.awt.Component$FlipBufferStrategy.revalidate(Unknown Source)
          at java.awt.Component$FlipBufferStrategy.getDrawGraphics(Unknown Source)
          at javax.swing.BufferStrategyPaintManager.prepare(Unknown Source)
          at javax.swing.BufferStrategyPaintManager.paint(Unknown Source)
          at javax.swing.RepaintManager.paint(Unknown Source)
          at javax.swing.JComponent.paint(Unknown Source)
          at java.awt.GraphicsCallback$PaintCallback.run(Unknown Source)
          at sun.awt.SunGraphicsCallback.runOneComponent(Unknown Source)
          at sun.awt.SunGraphicsCallback.runComponents(Unknown Source)
          at java.awt.Container.paint(Unknown Source)
          at java.awt.Window.paint(Unknown Source)
          at javax.swing.RepaintManager$3.run(Unknown Source)
          at javax.swing.RepaintManager$3.run(Unknown Source)
          at java.security.AccessController.doPrivileged(Native Method)
          at java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)
          at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
          at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
          at javax.swing.RepaintManager.prePaintDirtyRegions(Unknown Source)
          at javax.swing.RepaintManager.access$1100(Unknown Source)
          at javax.swing.RepaintManager$ProcessingRunnable.run(Unknown Source)
          at java.awt.event.InvocationEvent.dispatch(Unknown Source)
          at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
          at java.awt.EventQueue.access$200(Unknown Source)
          at java.awt.EventQueue$3.run(Unknown Source)        


-Maybe  
  -Maybe a more sophisticated version of find/replace, where I break up the String? It is pretty slow on an 8MB file.
    -Loop thru 20000 characters at a time, appending last searchFor.length() from previous to first. 
    -Note that java.util.regex.Matcher does have the ability to tell you that the end of a string is a partial match.
  -How about dual-window mode. Only two windows, that's it.
  -About should show an icon
  -Undo
    -Undo to last save?
    -You could have undostep include whether selection is forwards or backwards. Just a boolean.
  -Selected text color, selected background color
  -Indents & Tabs, Fonts should only enable ok button when something changes.
    -Also should show message when ok is clicked.

-Long term problems
  -Weird background bugs
    -Do you see that doo doo where java says it's starting up with mixed mode "sharing"? 
    -Mostly when it runs two at once.
    -Exe alternatives?
      -Consider jexepack, which costs $100 or you get an alert everytime you open it.
  
  -Slow scrolling:
    -Too many key listeners?
    -Noticed that it seems to slow down with a lot of windows open. Hmph. Don't tell me I have to resort to... oh gawd no. Not recreating jtextareas when I switch windows. Horrors.



